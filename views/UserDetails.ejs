<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <title>User Details</title>
</head>

<body class="bg-gray-100">
    <%- include('partials/navbar.ejs'); %>

        <div class="flex justify-center items-center mt-12 p-4">
            <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-4xl">
                <div class="flex flex-row justify-start items-center mb-2">
                    <h1 class="text-2xl font-bold text-center mr-4">User Details</h1>
                    <i id="openModalBtn" class="fa-solid fa-paper-plane text-blue-500 cursor-pointer" title="Send Email"></i>
                    <i id="downloadDocument" style="margin-left: 10px;" class="fa-solid fa-file-word text-blue-500 cursor-pointer"
                        title="Generate Phishing Document"></i>
                </div>
                <div id="details" class="space-y-4 text-gray-700">
                    <!-- User details will be inserted here -->
                </div>
            </div>
        </div>

        <!-- Modal -->
        <div id="emailModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex justify-center items-center">
            <div class="bg-white p-6 rounded-lg shadow-lg w-full max-w-lg">
                <h2 class="text-xl font-bold mb-4">Send Email</h2>
                <form id="emailForm" class="space-y-4">
                    <div>
                        <label for="subject" class="block text-gray-700 font-semibold">Subject</label>
                        <input type="text" id="subject" name="subject"
                            class="w-full px-4 py-2 border rounded-lg focus:outline-none">
                    </div>
                    <div>
                        <label for="message" class="block text-gray-700 font-semibold">Message</label>
                        <textarea id="message" name="message" rows="4"
                            class="w-full px-4 py-2 border rounded-lg focus:outline-none"></textarea>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-md">
                            Send
                        </button>
                        <button type="button" id="closeModalBtn"
                            class="ml-4 bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md">
                            Cancel
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <script>
            async function fetchUserDetails() {
                const userId = window.location.href.split("/viewDetails/")[1];

                try {
                    const response = await fetch(`/user/${userId}`);
                    const user = await response.json();

                    if (response.ok) {
                        document.getElementById('details').innerHTML = `
                        <div class="bg-gray-100 p-6 rounded-lg shadow-sm">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="flex items-center space-x-4">
                            <i class="fas fa-envelope text-blue-500 text-xl"></i>
                            <p><strong class="font-semibold">Email:</strong> ${user.emailId}</p>
                        </div>
                        <!-- <div class="flex items-center space-x-4">
                            <i class="fas fa-link text-blue-500 text-xl"></i>
                            <p><strong class="font-semibold">Link Open Count:</strong> ${user.linkOpenCount}</p>
                        </div> -->
                        <!-- <div class="flex items-center space-x-4">
                            <i class="fas fa-envelope-open text-blue-500 text-xl"></i>
                            <p><strong class="font-semibold">Email Open Count:</strong> ${user.emailOpenCount}</p>
                        </div> -->
                        <div class="flex items-center space-x-4">
                            <i class="fas fa-paperclip text-blue-500 text-xl"></i>
                            <p><strong class="font-semibold">Attachment Open Count:</strong> ${user.attachmentOpenCount}</p>
                        </div>
                        <!-- <div class="flex items-center space-x-4">
                            <i class="fas fa-file-alt text-blue-500 text-xl"></i>
                            <p><strong class="font-semibold">Submitted Data:</strong> ${user.submittedData}</p>
                        </div> --> 
                        <div class="flex items-center space-x-4">
                            <i class="fas fa-exclamation-triangle text-blue-500 text-xl"></i>
                            <p><strong class="font-semibold">Reported Spam:</strong> ${user.reportedSpam ? 'Yes' : 'No'}</p>
                        </div>
                        <div class="flex items-center space-x-4">
                            <i class="fas fa-map-marker-alt text-blue-500 text-xl"></i>
                            <p><strong class="font-semibold">IP Address:</strong> ${user.ipAddress || 'N/A'}</p>
                        </div>
                        <div class="flex items-center space-x-4">
                            <i class="fas fa-globe text-blue-500 text-xl"></i>
                            <p><strong class="font-semibold">Approx Location:</strong> ${user.location ? `${user.location.city || 'N/A'}, ${user.location.region || 'N/A'}, ${user.location.country || 'N/A'}` : 'N/A'}</p>
                        </div>
                        <div class="flex items-center space-x-4">
                            <i class="fas fa-compass text-blue-500 text-xl"></i>
                            <p><strong class="font-semibold">Approx Coordinates:</strong> ${user.location && user.location.coordinates ? `Latitude: ${user.location.coordinates[0]}, Longitude: ${user.location.coordinates[1]}` : 'N/A'}</p>
                        </div>
                    </div>
                    
                    <!-- <h2 class="text-xl font-semibold mt-6">Submitted Content</h2>
                    <ul class="list-disc pl-5">
                        ${user.submittedContent.length <= 0 ? "<li>No Data Submitted yet</li>" :
                                user.submittedContent.map(content => {
                                    // Construct the list item directly
                                    if (content.username === undefined && content.mobileNo !== undefined) {
                                        return `<li class="py-1">Mobile No: <span class="font-medium">${content.mobileNo}</span></li>`;
                                    }

                                    // Otherwise, include all defined fields
                                    return `
                                        <li class="py-1">
                                            ${content.username !== undefined ? `Username: <span class="font-medium">${content.username}</span>` : ''}
                                            ${content.password !== undefined ? `, Password: <span class="font-medium">${content.password}</span>` : ''}
                                            ${content.name !== undefined ? `, Name: <span class="font-medium">${content.name}</span>` : ''}
                                            ${content.phone !== undefined ? `, Phone: <span class="font-medium">${content.phone}</span>` : ''}
                                            ${content.category !== undefined ? `, Category: <span class="font-medium">${content.category}</span>` : ''}
                                        </li>`;
                                }).join('')}
                                    </ul> -->
                                </div>`;
                    } else {
                        document.getElementById('details').innerHTML = '<p class="text-red-500">User not found</p>';
                    }
                } catch (error) {
                    console.error('Error fetching user details:', error);
                    document.getElementById('details').innerHTML = '<p class="text-red-500">Error loading details</p>';
                }
            }

            // Modal functionality
            const modal = document.getElementById('emailModal');
            const openModalBtn = document.getElementById('openModalBtn');
            const closeModalBtn = document.getElementById('closeModalBtn');
            const emailForm = document.getElementById('emailForm');

            openModalBtn.addEventListener('click', () => {
                modal.classList.remove('hidden');
            });

            closeModalBtn.addEventListener('click', () => {
                modal.classList.add('hidden');
            });

            downloadDocument.addEventListener('click', async () => {
                const userId = window.location.href.split("/viewDetails/")[1];

                try {
                    const response = await fetch(`/generate-document/${userId}`);

                    if (response.ok) {
                        // Convert the response to a Blob
                        const blob = await response.blob();

                        // Create a download link
                        const url = window.URL.createObjectURL(blob);
                        const link = document.createElement('a');
                        link.href = url;

                        // Set the downloaded file name
                        link.setAttribute('download', `${userId}.odt`);

                        // Programmatically trigger the click to download the file
                        document.body.appendChild(link);
                        link.click();

                        // Remove the link from the document
                        link.parentNode.removeChild(link);

                        console.log("Download successful");
                    } else {
                        console.error('Error: ', response.statusText);
                    }
                } catch (error) {
                    console.error('Error Downloading Document', error);
                    document.getElementById('details').innerHTML = '<p class="text-red-500">Error Downloading Document</p>';
                }
            });


            emailForm.addEventListener('submit', async (e) => {
                e.preventDefault();

                const userId = window.location.href.split("/viewDetails/")[1];
                const subject = document.getElementById('subject').value;
                const message = document.getElementById('message').value;

                try {
                    const response = await fetch(`/send-email`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ subject, message, userId }),
                    });

                    if (response.ok) {
                        alert('Email sent successfully!');
                        modal.classList.add('hidden');
                    } else {
                        alert('Failed to send email');
                    }
                } catch (error) {
                    console.error('Error sending email:', error);
                    alert('Error sending email');
                }
            });

            // Fetch user details on load
            fetchUserDetails();
        </script>
</body>

</html>